import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class WordCount {

    private static final Set<String> STOP_WORDS = new HashSet<>(Arrays.asList(
        "a", "an", "and", "are", "as", "at", "be", "but", "by", "for", "if", 
        "in", "is", "it", "of", "on", "or", "the", "to", "with"
    ));

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter text or provide a file path:");
        String input = scanner.nextLine().trim();

        String text;
        if (input.isEmpty()) {
            System.out.println("No input provided.");
            return;
        } else if (input.startsWith("file:")) {
            String filePath = input.substring(5).trim();
            text = readFile(filePath);
            if (text == null) {
                return;
            }
        } else {
            text = input;
        }

        Map<String, Integer> wordFrequency = countWords(text);
        displayWordCount(wordFrequency);
    }

    private static String readFile(String filePath) {
        StringBuilder content = new StringBuilder();
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                content.append(line).append(" ");
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
            return null;
        }
        return content.toString();
    }

    private static Map<String, Integer> countWords(String text) {
        Map<String, Integer> wordFrequency = new HashMap<>();
        String[] words = text.split("\\W+");
        for (String word : words) {
            word = word.toLowerCase();
            if (!STOP_WORDS.contains(word) && !word.isEmpty()) {
                wordFrequency.put(word, wordFrequency.getOrDefault(word, 0) + 1);
            }
        }
        return wordFrequency;
    }

    private static void displayWordCount(Map<String, Integer> wordFrequency) {
        int totalWords = wordFrequency.values().stream().mapToInt(Integer::intValue).sum();
        int uniqueWords = wordFrequency.size();

        System.out.println("Total words: " + totalWords);
        System.out.println("Unique words: " + uniqueWords);

        System.out.println("\nWord frequencies:");
        wordFrequency.forEach((word, count) -> 
            System.out.println(word + ": " + count)
        );
    }
}

